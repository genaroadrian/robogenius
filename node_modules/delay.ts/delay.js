"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function delay(ms, result) {
    return new Promise(function (resolve, reject) { return setTimeout(resolve, ms, result); });
}
exports.default = delay;
function delayReject(ms, error) {
    return new Promise(function (resolve, reject) { return setTimeout(reject, ms, error); });
}
exports.delayReject = delayReject;
// Helper functions for then and catch. It's inspired by https://github.com/sindresorhus/delay.
function delayThen(ms) {
    return function (result) { return delay(ms, result); };
}
exports.delayThen = delayThen;
function delayCatch(ms) {
    return function (error) { return delayReject(ms, error); };
}
exports.delayCatch = delayCatch;
//# sourceMappingURL=delay.js.map