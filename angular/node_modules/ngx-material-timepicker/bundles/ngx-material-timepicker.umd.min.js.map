{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://ngx-material-timepicker/src/app/material-timepicker/models/time-period.enum.ts","ng://ngx-material-timepicker/src/app/material-timepicker/models/time-format.enum.ts","ng://ngx-material-timepicker/src/app/material-timepicker/utils/timepicker.utils.ts","ng://ngx-material-timepicker/src/app/material-timepicker/services/time-adapter.ts","ng://ngx-material-timepicker/src/app/material-timepicker/services/ngx-material-timepicker.service.ts","ng://ngx-material-timepicker/src/app/material-timepicker/models/time-unit.enum.ts","ng://ngx-material-timepicker/src/app/material-timepicker/services/ngx-material-timepicker-event.service.ts","ng://ngx-material-timepicker/src/app/material-timepicker/ngx-material-timepicker.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/ngx-material-timepicker-toggle-icon.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-toggle-button/ngx-material-timepicker-toggle.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/ngx-timepicker.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/ngx-material-timepicker-theme.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/utils/timepicker-time.utils.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-hours-face/ngx-material-timepicker-hours-face.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-24-hours-face/ngx-material-timepicker-24-hours-face.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-12-hours-face/ngx-material-timepicker-12-hours-face.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-minutes-face/ngx-material-timepicker-minutes-face.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-face/ngx-material-timepicker-face.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-button/ngx-material-timepicker-button.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-dial/ngx-material-timepicker-dial.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/pipes/time-formatter.pipe.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-dial-control/ngx-material-timepicker-dial-control.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-period/ngx-material-timepicker-period.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/pipes/style-sanitizer.pipe.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/overlay.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/pipes/minutes-formatter.pipe.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/autofocus.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/ngx-material-timepicker.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","AM","PM","isSameOrAfter","time","compareWith","unit","hour","hasSame","valueOf","isSameOrBefore","TimeAdapter","parseTime","format","indexOf","period","trim","substr","toUpperCase","isPeriodValid","TimePeriod","_a","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","split","h","formatHour","parseInt","isPM","formatTime","timeFormat","TimeFormat","timeMask","DateTime","fromFormat","toFormat","toLowerCase","convertTimeToDateTime","isTimeAvailable","min","max","granularity","minutesGap","convertedTime","minutes","minute","Error","isAfter","isBefore","between","isBetween","before","after","currentHour","DEFAULT_HOUR","angle","DEFAULT_MINUTE","NgxMaterialTimepickerService","hourSubject","BehaviorSubject","minuteSubject","periodSubject","defineProperty","asObservable","setDefaultTimeIfAvailable","setDefaultTime","console","getFullTime","getValue","defaultTime","toJSDate","fromJSDate","isValid","getHours","formatHourByPeriod","getMinutes","resetTime","Injectable","args","providedIn","HOUR","MINUTE","NgxMaterialTimepickerEventService","backdropClickSubject","Subject","keydownEventSubject","dispatchEvent","event","type","ENTER","LEAVE","NgxMaterialTimepickerComponent","timepickerService","eventService","_this","timeUnit","TimeUnit","activeTimeUnit","isOpened","isEsc","timeSet","EventEmitter","opened","closed","hourSelected","subscriptions","merge","backdropClick","keydownEvent","pipe","filter","keyCode","subscribe","close","_minutesGap","gap","Math","floor","timepickerInput","disabled","ngOnInit","selectedHour","selectedMinute","selectedPeriod","registerInput","input","onHourChange","onHourSelected","changeTimeUnit","onMinuteChange","changePeriod","setTime","open","disableAnimation","animationState","AnimationState","closeTimepicker","animationDone","phaseName","toState","onKeydown","stopPropagation","ngOnDestroy","forEach","subscription","unsubscribe","Component","selector","template","animations","trigger","transition","style","transform","animate","opacity","providers","Input","Output","ViewChild","HostListener","NgxMaterialTimepickerToggleIconDirective","Directive","NgxMaterialTimepickerToggleComponent","_disabled","undefined","timepicker","ContentChild","VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","TimepickerDirective","multi","elementRef","_format","_value","timepickerSubscriptions","onTouched","onChange","_min","_max","picker","registerTimepicker","updateInputValue","_timepicker","warn","onInput","ngOnChanges","changes","currentValue","onClick","disableClick","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","nativeElement","host","[disabled]","(input)","(blur)","ElementRef","NgxMaterialTimepickerThemeDirective","element","ngAfterViewInit","theme","setTheme","val","prop","setProperty","replace","fill","map","v","disableHours","hours","config","currentTime","fromObject","disableMinutes","hour_1","NgxMaterialTimepickerHoursFace","hourChange","hoursList","onTimeSelected","NgxMaterialTimepicker24HoursFaceComponent","_super","tslib_1.__extends","ngAfterContentInit","minTime","maxTime","NgxMaterialTimepicker12HoursFaceComponent","NgxMaterialTimepickerMinutesFaceComponent","minutesList","minuteChange","CLOCK_HAND_STYLES","height","top","NgxMaterialTimepickerFaceComponent","innerClockFaceSize","timeChange","timeSelected","setClockHandPosition","addTouchEvents","faceTimeChanges","selectedTimeChanges","selectedTime","faceTime","find","setTimeout","selectAvailableTime","trackByTime","_","onMousedown","preventDefault","isStarted","selectTime","MouseEvent","clockFaceCords","clockFace","getBoundingClientRect","centerX","left","width","centerY","arctangent","atan","abs","clientX","clientY","PI","circleAngle","countAngleByCords","x0","y0","x","y","currentAngle","isInnerClockChosen","isInnerClockFace","angleStep","roundedAngle","roundAngle","onMouseup","isHourSelected","isClockFaceDisabled","isMinuteSelected","removeTouchEvents","touchStartHandler","bind","touchEndHandler","addEventListener","removeEventListener","decreaseClockHand","increaseClockHand","clockHand","every","availableTime","sqrt","pow","changeDetection","ChangeDetectionStrategy","OnPush","step","round","NgxMaterialTimepickerButtonComponent","NgxMaterialTimepickerDialComponent","periodChanged","timeUnitChanged","hourChanged","minuteChanged","changeHour","changeMinute","showHint","isHintVisible","hideHint","TimeFormatterPipe","Pipe","name","NgxMaterialTimepickerDialControlComponent","timeChanged","focused","unfocused","timeList","isEditable","firstChange","saveTimeAndChangeTimeUnit","previousTime","updateTime","onKeyDown","char","String","fromCharCode","isInputAllowed","isTimeDisabledToChange","nextTime","test","isTimeUnavailable","changeTimeByArrow","some","ctrlKey","metaKey","NgxMaterialTimepickerPeriodComponent","timePeriod","isPeriodAvailable","isSwitchPeriodAvailable","getDisabledTimeByPeriod","sequence","StyleSanitizerPipe","domSanitizer","bypassSecurityTrustStyle","DomSanitizer","OverlayDirective","preventClick","MinutesFormatterPipe","AutofocusDirective","document","activeElement","isFocusActive","focus","Optional","Inject","DOCUMENT","NgxMaterialTimepickerModule","NgModule","imports","CommonModule","FormsModule","exports","declarations"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum TimePeriod {\n    AM = 'AM',\n    PM = 'PM'\n}\n","export enum TimeFormat {\n    TWELVE = 'hh:mm a',\n    TWELVE_SHORT = 'h:m a',\n    TWENTY_FOUR = 'HH:mm',\n    TWENTY_FOUR_SHORT = 'H:m'\n}\n","import { DateTime } from 'luxon';\n\n\nexport function isSameOrAfter(time: DateTime, compareWith: DateTime, unit: 'hours' | 'minutes' = 'minutes'): boolean {\n    if (unit === 'hours') {\n        return time.hour >= compareWith.hour;\n    }\n    if (unit === 'minutes') {\n        return time.hasSame(compareWith, unit) || time.valueOf() > compareWith.valueOf();\n    }\n}\n\nexport function isSameOrBefore(time: DateTime, compareWith: DateTime, unit: 'hours' | 'minutes' = 'minutes'): boolean {\n    if (unit === 'hours') {\n        return time.hour <= compareWith.hour;\n    }\n    if (unit === 'minutes') {\n        return time.hasSame(compareWith, unit) || time.valueOf() <= compareWith.valueOf();\n    }\n}\n\nexport function isBetween(time: DateTime, before: DateTime, after: DateTime, unit: 'hours' | 'minutes' = 'minutes'): boolean {\n    if (unit === 'hours') {\n        return isSameOrBefore(time, after, unit) && isSameOrAfter(time, before, unit);\n    }\n    if (unit === 'minutes') {\n        return isSameOrBefore(time, after) && isSameOrAfter(time, before);\n    }\n}\n","import { DateTime } from 'luxon';\n\nimport { TimeFormat } from '../models/time-format.enum';\nimport { TimePeriod } from '../models/time-period.enum';\nimport { isBetween, isSameOrAfter, isSameOrBefore } from '../utils/timepicker.utils';\n\n// @dynamic\nexport class TimeAdapter {\n\n    static parseTime(time: string, format = 12): string {\n        if (time.indexOf(':') === -1) {\n            return 'Invalid time';\n        }\n        let period = time.trim().substr(time.length - 2).toUpperCase();\n\n        const isPeriodValid = period === TimePeriod.AM || period === TimePeriod.PM;\n        const [h, m] = time.split(':');\n\n\n        if (format === 24) {\n            const formattedHours = isPeriodValid ? this.formatHour(+h, 12, period as TimePeriod) : +h;\n            return `${formattedHours}:${parseInt(m, 10)}`;\n        }\n\n        const isPM = +h > 12;\n        const hours = isPM ? +h - 12 : +h;\n\n        period = isPeriodValid ? period : isPM ? TimePeriod.PM : TimePeriod.AM;\n\n        return `${hours}:${parseInt(m, 10)} ${period}`;\n    }\n\n    static formatTime(time: string, format = 12): string {\n        const timeFormat = (format === 24) ? TimeFormat.TWENTY_FOUR : TimeFormat.TWELVE;\n        const timeMask = (format === 24) ? TimeFormat.TWENTY_FOUR_SHORT : TimeFormat.TWELVE_SHORT;\n\n        return DateTime.fromFormat(this.parseTime(time, format), timeMask).toFormat(timeFormat).toLowerCase();\n    }\n\n    static convertTimeToDateTime(time: string, format = 12): DateTime {\n        const timeMask = (format === 24) ? TimeFormat.TWENTY_FOUR_SHORT : TimeFormat.TWELVE_SHORT;\n        return DateTime.fromFormat(this.parseTime(time, format), timeMask);\n    }\n\n    static isTimeAvailable(\n        time: string,\n        min?: DateTime,\n        max?: DateTime,\n        granularity?: 'hours' | 'minutes',\n        minutesGap?: number,\n        format?: number\n    ): boolean {\n\n        if (!time) {\n            return;\n        }\n\n        const convertedTime = this.convertTimeToDateTime(time, format);\n        const minutes = convertedTime.minute;\n\n        if (minutesGap && (minutes % minutesGap !== 0)) {\n            throw new Error(`Your minutes - ${minutes} doesn\\'t match your minutesGap - ${minutesGap}`);\n        }\n        const isAfter = (min && !max)\n            && isSameOrAfter(convertedTime, min, granularity);\n        const isBefore = (max && !min)\n            && isSameOrBefore(convertedTime, max, granularity);\n        const between = (min && max)\n            && isBetween(convertedTime, min, max, granularity);\n        const isAvailable = !min && !max;\n\n        return isAfter || isBefore || between || isAvailable;\n    }\n\n    /***\n     *  Format hour according to time format (12 or 24)\n     */\n    static formatHour(currentHour: number, format: number, period: TimePeriod): number {\n        if (format === 24) {\n            return currentHour;\n        }\n        const hour = period === TimePeriod.AM ? currentHour : currentHour + 12;\n\n        if (period === TimePeriod.AM && hour === 12) {\n            return 0;\n        } else if (period === TimePeriod.PM && hour === 24) {\n            return 12;\n        }\n        return hour;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ClockFaceTime } from '../models/clock-face-time.interface';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { TimePeriod } from '../models/time-period.enum';\nimport { TimeAdapter } from './time-adapter';\nimport { DateTime } from 'luxon';\n\n\nconst DEFAULT_HOUR: ClockFaceTime = {\n    time: 12,\n    angle: 360\n};\nconst DEFAULT_MINUTE: ClockFaceTime = {\n    time: 0,\n    angle: 360\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NgxMaterialTimepickerService {\n\n    private hourSubject = new BehaviorSubject<ClockFaceTime>(DEFAULT_HOUR);\n    private minuteSubject = new BehaviorSubject<ClockFaceTime>(DEFAULT_MINUTE);\n    private periodSubject = new BehaviorSubject<TimePeriod>(TimePeriod.AM);\n\n\n    set hour(hour: ClockFaceTime) {\n        this.hourSubject.next(hour);\n    }\n\n    get selectedHour(): Observable<ClockFaceTime> {\n        return this.hourSubject.asObservable();\n    }\n\n    set minute(minute: ClockFaceTime) {\n        this.minuteSubject.next(minute);\n    }\n\n    get selectedMinute(): Observable<ClockFaceTime> {\n        return this.minuteSubject.asObservable();\n    }\n\n    set period(period: TimePeriod) {\n        const isPeriodValid = (period === TimePeriod.AM) || (period === TimePeriod.PM);\n\n        if (isPeriodValid) {\n            this.periodSubject.next(period);\n        }\n    }\n\n    get selectedPeriod(): Observable<TimePeriod> {\n        return this.periodSubject.asObservable();\n    }\n\n\n    setDefaultTimeIfAvailable(time: string, min: DateTime, max: DateTime, format: number, minutesGap?: number) {\n        /* Workaround to double error message*/\n        try {\n            if (TimeAdapter.isTimeAvailable(time, min, max, 'minutes', minutesGap)) {\n                this.setDefaultTime(TimeAdapter.formatTime(time, format), format);\n            }\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    getFullTime(format: number): string {\n        const hour = this.hourSubject.getValue().time;\n        const minute = this.minuteSubject.getValue().time;\n        const period = format === 12 ? this.periodSubject.getValue() : '';\n\n        return TimeAdapter.formatTime(`${hour}:${minute} ${period}`, format);\n    }\n\n    private setDefaultTime(time: string, format: number) {\n        const defaultTime = TimeAdapter.convertTimeToDateTime(time, format).toJSDate();\n\n        if (DateTime.fromJSDate(defaultTime).isValid) {\n            const period = time.substr(time.length - 2).toUpperCase();\n            const hour = defaultTime.getHours();\n\n            this.hour = {...DEFAULT_HOUR, time: formatHourByPeriod(hour, period as TimePeriod)};\n            this.minute = {...DEFAULT_MINUTE, time: defaultTime.getMinutes()};\n            this.period = period as TimePeriod;\n\n        } else {\n            this.resetTime();\n        }\n    }\n\n    private resetTime(): void {\n        this.hour = {...DEFAULT_HOUR};\n        this.minute = {...DEFAULT_MINUTE};\n        this.period = TimePeriod.AM;\n    }\n}\n\n/***\n *  Format hour in 24hours format to meridian (AM or PM) format\n */\nfunction formatHourByPeriod(hour: number, period: TimePeriod): number {\n    switch (period) {\n        case TimePeriod.AM:\n            return hour === 0 ? 12 : hour;\n        case TimePeriod.PM:\n            return hour === 12 ? 12 : hour - 12;\n        default:\n            return hour;\n    }\n}\n","export enum TimeUnit {\n    HOUR,\n    MINUTE\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NgxMaterialTimepickerEventService {\n\n    private backdropClickSubject: Subject<MouseEvent> = new Subject();\n    private keydownEventSubject: Subject<KeyboardEvent> = new Subject();\n\n    get backdropClick(): Observable<MouseEvent> {\n        return this.backdropClickSubject.asObservable();\n    }\n\n    get keydownEvent(): Observable<KeyboardEvent> {\n        return this.keydownEventSubject.asObservable();\n    }\n\n    dispatchEvent(event: KeyboardEvent | MouseEvent): void {\n        switch (event.type) {\n            case 'click':\n                this.backdropClickSubject.next(<MouseEvent>event);\n                break;\n            case 'keydown':\n                this.keydownEventSubject.next(<KeyboardEvent>event);\n                break;\n            default:\n                throw new Error('no such event type');\n        }\n    }\n\n}\n","import { Component, ElementRef, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\nimport { ClockFaceTime } from './models/clock-face-time.interface';\nimport { TimePeriod } from './models/time-period.enum';\nimport { merge, Subscription } from 'rxjs';\nimport { NgxMaterialTimepickerService } from './services/ngx-material-timepicker.service';\nimport { TimeUnit } from './models/time-unit.enum';\nimport { animate, AnimationEvent, style, transition, trigger } from '@angular/animations';\nimport { NgxMaterialTimepickerEventService } from './services/ngx-material-timepicker-event.service';\nimport { filter } from 'rxjs/operators';\nimport { TimepickerDirective } from './directives/ngx-timepicker.directive';\nimport { DateTime } from 'luxon';\n\nexport enum AnimationState {\n    ENTER = 'enter',\n    LEAVE = 'leave'\n}\n\n\nconst ESCAPE = 27;\n\n@Component({\n    selector: 'ngx-material-timepicker',\n    templateUrl: './ngx-material-timepicker.component.html',\n    styleUrls: ['./ngx-material-timepicker.component.scss'],\n    animations: [\n        trigger('timepicker', [\n            transition(`* => ${AnimationState.ENTER}`, [\n                style({transform: 'translateY(-30%)'}),\n                animate('0.2s ease-out', style({transform: 'translateY(0)'}))\n            ]),\n            transition(`${AnimationState.ENTER} => ${AnimationState.LEAVE}`, [\n                style({transform: 'translateY(0)', opacity: 1}),\n                animate('0.2s ease-out', style({transform: 'translateY(-30%)', opacity: 0}))\n            ])\n        ])\n    ],\n    providers: [NgxMaterialTimepickerService]\n})\nexport class NgxMaterialTimepickerComponent implements OnInit, OnDestroy {\n\n    selectedHour: ClockFaceTime;\n    selectedMinute: ClockFaceTime;\n    selectedPeriod: TimePeriod;\n\n    timeUnit = TimeUnit;\n    activeTimeUnit = TimeUnit.HOUR;\n\n    isOpened = false;\n    animationState: AnimationState;\n\n    @Input() cancelBtnTmpl: TemplateRef<Node>;\n    @Input() editableHintTmpl: TemplateRef<Node>;\n    @Input() confirmBtnTmpl: TemplateRef<Node>;\n    @Input('ESC') isEsc = true;\n    @Input() enableKeyboardInput: boolean;\n    @Input() preventOverlayClick: boolean;\n    @Input() disableAnimation: boolean;\n\n    @Input()\n    set minutesGap(gap: number) {\n        if (gap == null) {\n            return;\n        }\n        gap = Math.floor(gap);\n        this._minutesGap = gap <= 59 ? gap : 1;\n    }\n\n    get minutesGap(): number {\n        return this._minutesGap;\n    }\n\n    @Input()\n    set defaultTime(time: string) {\n        this.setDefaultTime(time);\n    }\n\n    @Output() timeSet = new EventEmitter<string>();\n    @Output() opened = new EventEmitter<null>();\n    @Output() closed = new EventEmitter<null>();\n    @Output() hourSelected = new EventEmitter<number>();\n\n    @ViewChild('timepickerww') timepickerComponent: ElementRef;\n\n    private _minutesGap: number;\n    private timepickerInput: TimepickerDirective;\n    private subscriptions: Subscription[] = [];\n\n    constructor(private timepickerService: NgxMaterialTimepickerService,\n                private eventService: NgxMaterialTimepickerEventService) {\n\n        this.subscriptions.push(merge(this.eventService.backdropClick,\n            this.eventService.keydownEvent.pipe(filter(e => e.keyCode === ESCAPE && this.isEsc)))\n            .subscribe(() => this.close()));\n\n    }\n\n    get minTime(): string | DateTime {\n        return this.timepickerInput && this.timepickerInput.min;\n    }\n\n    get maxTime(): string | DateTime {\n        return this.timepickerInput && this.timepickerInput.max;\n    }\n\n    get disabled(): boolean {\n        return this.timepickerInput && this.timepickerInput.disabled;\n    }\n\n    get format(): number {\n        return this.timepickerInput && this.timepickerInput.format;\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(this.timepickerService.selectedHour\n            .subscribe(hour => this.selectedHour = hour));\n\n        this.subscriptions.push(this.timepickerService.selectedMinute\n            .subscribe(minute => this.selectedMinute = minute));\n\n        this.subscriptions.push(this.timepickerService.selectedPeriod\n            .subscribe(period => this.selectedPeriod = period));\n    }\n\n    /***\n     * Register an input with this timepicker.\n     * input - The timepicker input to register with this timepicker\n     */\n    registerInput(input: TimepickerDirective): void {\n        if (this.timepickerInput) {\n            throw Error('A Timepicker can only be associated with a single input.');\n        }\n        this.timepickerInput = input;\n    }\n\n    onHourChange(hour: ClockFaceTime): void {\n        this.timepickerService.hour = hour;\n    }\n\n    onHourSelected(hour: number): void {\n        this.changeTimeUnit(TimeUnit.MINUTE);\n        this.hourSelected.next(hour);\n    }\n\n    onMinuteChange(minute: ClockFaceTime): void {\n        this.timepickerService.minute = minute;\n    }\n\n    changePeriod(period: TimePeriod): void {\n        this.timepickerService.period = period;\n    }\n\n    changeTimeUnit(unit: TimeUnit): void {\n        this.activeTimeUnit = unit;\n    }\n\n    setTime(): void {\n        this.timeSet.next(this.timepickerService.getFullTime(this.format));\n        this.close();\n    }\n\n    setDefaultTime(time: string): void {\n        this.timepickerService.setDefaultTimeIfAvailable(\n            time, this.minTime as DateTime, this.maxTime as DateTime, this.format, this.minutesGap);\n    }\n\n    open(): void {\n        this.isOpened = true;\n        if (!this.disableAnimation) {\n            this.animationState = AnimationState.ENTER;\n        }\n        this.opened.next();\n    }\n\n    close(): void {\n        if (this.disableAnimation) {\n            this.closeTimepicker();\n            return;\n        }\n        this.animationState = AnimationState.LEAVE;\n    }\n\n    animationDone(event: AnimationEvent): void {\n        if (event.phaseName === 'done' && event.toState === AnimationState.LEAVE) {\n            this.closeTimepicker();\n        }\n    }\n\n    @HostListener('keydown', ['$event'])\n    onKeydown(e: KeyboardEvent) {\n        this.eventService.dispatchEvent(e);\n        e.stopPropagation();\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n\n    private closeTimepicker(): void {\n        this.isOpened = false;\n        this.activeTimeUnit = TimeUnit.HOUR;\n        this.closed.next();\n    }\n}\n","import {Directive} from '@angular/core';\n\n/* To override a default toggle icon */\n@Directive({selector: '[ngxMaterialTimepickerToggleIcon]'})\n\nexport class NgxMaterialTimepickerToggleIconDirective {\n}\n","import {Component, ContentChild, Input} from '@angular/core';\nimport {NgxMaterialTimepickerToggleIconDirective} from '../../directives/ngx-material-timepicker-toggle-icon.directive';\nimport {NgxMaterialTimepickerComponent} from '../../ngx-material-timepicker.component';\n\n@Component({\n    selector: 'ngx-material-timepicker-toggle',\n    templateUrl: 'ngx-material-timepicker-toggle.component.html',\n    styleUrls: ['ngx-material-timepicker-toggle.component.scss']\n})\n\nexport class NgxMaterialTimepickerToggleComponent {\n\n    @Input('for') timepicker: NgxMaterialTimepickerComponent;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined ? this.timepicker.disabled : this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = value;\n    }\n\n    private _disabled: boolean;\n\n    @ContentChild(NgxMaterialTimepickerToggleIconDirective) customIcon: NgxMaterialTimepickerToggleIconDirective;\n\n    open(event): void {\n        if (this.timepicker) {\n            this.timepicker.open();\n            event.stopPropagation();\n        }\n    }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { NgxMaterialTimepickerComponent } from '../ngx-material-timepicker.component';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { TimeAdapter } from '../services/time-adapter';\nimport { DateTime } from 'luxon';\n\nconst VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    // tslint:disable-next-line\n    useExisting: forwardRef(() => TimepickerDirective),\n    multi: true\n};\n\n@Directive({\n    selector: '[ngxTimepicker]',\n    providers: [VALUE_ACCESSOR],\n    host: {\n        '[disabled]': 'disabled',\n        '(input)': 'onInput($event.target.value)',\n        '(blur)': 'onTouched()',\n    },\n})\nexport class TimepickerDirective implements ControlValueAccessor, OnDestroy, OnChanges {\n\n    @Input()\n    set format(value: number) {\n        this._format = value === 24 ? 24 : 12;\n    }\n\n    get format(): number {\n        return this._format;\n    }\n\n    private _format = 12;\n\n    @Input()\n    set min(value: string | DateTime) {\n        if (typeof value === 'string') {\n            this._min = TimeAdapter.convertTimeToDateTime(value, this._format);\n            return;\n        }\n        this._min = value;\n    }\n\n    get min(): string | DateTime {\n        return this._min;\n    }\n\n    private _min: string | DateTime;\n\n    @Input()\n    set max(value: string | DateTime) {\n        if (typeof value === 'string') {\n            this._max = TimeAdapter.convertTimeToDateTime(value, this._format);\n            return;\n        }\n        this._max = value;\n    }\n\n    get max(): string | DateTime {\n        return this._max;\n    }\n\n    private _max: string | DateTime;\n\n    @Input('ngxTimepicker')\n    set timepicker(picker: NgxMaterialTimepickerComponent) {\n        this.registerTimepicker(picker);\n    }\n\n    private _timepicker: NgxMaterialTimepickerComponent;\n\n    @Input()\n    set value(value: string) {\n        if (!value) {\n            this._value = '';\n            this.updateInputValue();\n            return;\n        }\n        const time = TimeAdapter.formatTime(value, this._format);\n        const isAvailable = TimeAdapter.isTimeAvailable(\n            time,\n            <DateTime>this._min,\n            <DateTime>this._max,\n            'minutes',\n            this._timepicker.minutesGap,\n            this._format\n        );\n\n        if (isAvailable) {\n            this._value = time;\n            this.updateInputValue();\n            return;\n        }\n        console.warn('Selected time doesn\\'t match min or max value');\n    }\n\n    get value(): string {\n        return this._value;\n    }\n\n    private _value = '';\n\n    @Input() disabled: boolean;\n    @Input() disableClick: boolean;\n\n    private timepickerSubscriptions: Subscription[] = [];\n\n    onTouched = () => {\n    }\n\n    private onChange: (value: any) => void = () => {\n    }\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n    private set defaultTime(time: string) {\n        this._timepicker.setDefaultTime(time);\n    }\n\n    onInput(value: string) {\n        this.value = value;\n        this.onChange(value);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['value'] && changes['value'].currentValue) {\n            this.defaultTime = changes['value'].currentValue;\n        }\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event) {\n        if (!this.disableClick) {\n            this._timepicker.open();\n            event.stopPropagation();\n        }\n    }\n\n    writeValue(value: string): void {\n        this.value = value;\n        this.defaultTime = value;\n    }\n\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    ngOnDestroy() {\n        this.timepickerSubscriptions.forEach(s => s.unsubscribe());\n    }\n\n    private registerTimepicker(picker: NgxMaterialTimepickerComponent): void {\n        if (picker) {\n            this._timepicker = picker;\n            this._timepicker.registerInput(this);\n            this.timepickerSubscriptions.push(this._timepicker.timeSet.subscribe((time: string) => {\n                this.value = time;\n                this.onChange(this._value);\n                this.onTouched();\n            }));\n            this.timepickerSubscriptions.push(\n                this._timepicker.closed.subscribe(() => this.defaultTime = this._value));\n        } else {\n            throw new Error('NgxMaterialTimepickerComponent is not defined.' +\n                ' Please make sure you passed the timepicker to ngxTimepicker directive');\n        }\n    }\n\n    private updateInputValue(): void {\n        this.elementRef.nativeElement.value = this.value;\n    }\n\n}\n\n","import {AfterViewInit, Directive, ElementRef, Input} from '@angular/core';\nimport {NgxMaterialTimepickerTheme} from '../models/ngx-material-timepicker-theme.interface';\n\n@Directive({selector: '[ngxMaterialTimepickerTheme]'})\nexport class NgxMaterialTimepickerThemeDirective implements AfterViewInit {\n\n    @Input('ngxMaterialTimepickerTheme') theme: NgxMaterialTimepickerTheme;\n\n    private element: HTMLElement;\n\n    constructor(elementRef: ElementRef) {\n        this.element = elementRef.nativeElement;\n    }\n\n    ngAfterViewInit() {\n        if (this.theme) {\n            this.setTheme(this.theme);\n        }\n    }\n\n    private setTheme(theme): void {\n        for (const val in theme) {\n            if (theme.hasOwnProperty(val)) {\n                if (typeof theme[val] === 'string') {\n                    for (const prop in theme) {\n                        if (theme.hasOwnProperty(prop)) {\n                            this.element.style.setProperty(`--${camelCaseToDash(prop)}`, theme[prop]);\n                        }\n                    }\n                    return;\n                }\n                this.setTheme(theme[val]);\n            }\n\n        }\n    }\n}\n\nfunction camelCaseToDash(myStr) {\n    return myStr.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n","import { ClockFaceTime } from '../models/clock-face-time.interface';\nimport { TimeAdapter } from '../services/time-adapter';\nimport { TimeFormat } from '../models/time-format.enum';\nimport { DisabledTimeConfig } from '../models/disabled-time-config.interface';\nimport { DateTime } from 'luxon';\n\n\nexport function getHours(format: number): ClockFaceTime[] {\n    return Array(format).fill(1).map((v, i) => {\n        const angleStep = 30;\n        const time = v + i;\n        const angle = angleStep * time;\n        return {time: time === 24 ? 0 : time, angle};\n    });\n}\n\nexport function disableHours(hours: ClockFaceTime[], config: DisabledTimeConfig): ClockFaceTime[] {\n    if (config.min || config.max) {\n\n        return hours.map(value => {\n            const hour = config.format === 24 ? value.time : TimeAdapter.formatHour(value.time, config.format, config.period);\n            const currentTime = DateTime.fromObject({hour}).toFormat(TimeFormat.TWELVE);\n\n            return {\n                ...value,\n                disabled: !TimeAdapter.isTimeAvailable(currentTime, config.min, config.max, 'hours')\n            };\n        });\n    }\n    return hours;\n}\n\nexport function getMinutes(gap = 1): ClockFaceTime[] {\n    const minutesCount = 60;\n    const angleStep = 360 / minutesCount;\n    const minutes = [];\n\n    for (let i = 0; i < minutesCount; i++) {\n        const angle = angleStep * i;\n        if (i % gap === 0) {\n            minutes.push({time: i, angle: angle !== 0 ? angle : 360});\n        }\n    }\n    return minutes;\n}\n\nexport function disableMinutes(minutes: ClockFaceTime[], selectedHour: number, config: DisabledTimeConfig) {\n    if (config.min || config.max) {\n\n        const hour = TimeAdapter.formatHour(selectedHour, config.format, config.period);\n\n        return minutes.map(value => {\n            const currentTime = DateTime.fromObject({hour, minute: value.time}).toFormat(TimeFormat.TWELVE);\n\n            return {\n                ...value,\n                disabled: !TimeAdapter.isTimeAvailable(currentTime, config.min, config.max, 'minutes')\n            };\n        });\n    }\n    return minutes;\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\nimport { DateTime } from 'luxon';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { getHours } from '../../utils/timepicker-time.utils';\n\n\nexport class NgxMaterialTimepickerHoursFace {\n\n    @Input() selectedHour: ClockFaceTime;\n    @Input() minTime: DateTime;\n    @Input() maxTime: DateTime;\n    @Input() format: number;\n\n    @Output() hourChange = new EventEmitter<ClockFaceTime>();\n    @Output() hourSelected = new EventEmitter<number>();\n\n    hoursList: ClockFaceTime[] = [];\n\n    protected constructor(format: number) {\n        this.hoursList = getHours(format);\n    }\n\n    onTimeSelected(time: number): void {\n        this.hourSelected.next(time);\n    }\n}\n","import {AfterContentInit, Component} from '@angular/core';\nimport {NgxMaterialTimepickerHoursFace} from '../timepicker-hours-face/ngx-material-timepicker-hours-face';\nimport { disableHours } from '../../utils/timepicker-time.utils';\n\n@Component({\n    selector: 'ngx-material-timepicker-24-hours-face',\n    templateUrl: 'ngx-material-timepicker-24-hours-face.component.html'\n})\n\nexport class NgxMaterialTimepicker24HoursFaceComponent extends NgxMaterialTimepickerHoursFace implements AfterContentInit {\n\n    constructor() {\n        super(24);\n    }\n\n    ngAfterContentInit() {\n        this.hoursList = disableHours(this.hoursList, {\n            min: this.minTime,\n            max: this.maxTime,\n            format: this.format\n        });\n    }\n}\n","import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {NgxMaterialTimepickerHoursFace} from '../timepicker-hours-face/ngx-material-timepicker-hours-face';\nimport {TimePeriod} from '../../models/time-period.enum';\nimport { disableHours } from '../../utils/timepicker-time.utils';\n\n\n@Component({\n    selector: 'ngx-material-timepicker-12-hours-face',\n    templateUrl: 'ngx-material-timepicker-12-hours-face.component.html'\n})\n\nexport class NgxMaterialTimepicker12HoursFaceComponent extends NgxMaterialTimepickerHoursFace implements OnChanges {\n\n    @Input() period: TimePeriod;\n\n    constructor() {\n        super(12);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['period'] && changes['period'].currentValue) {\n            this.hoursList = disableHours(this.hoursList, {\n                min: this.minTime,\n                max: this.maxTime,\n                format: this.format,\n                period: this.period\n            });\n        }\n    }\n}\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { TimeUnit } from '../../models/time-unit.enum';\nimport { TimePeriod } from '../../models/time-period.enum';\nimport { DateTime } from 'luxon';\nimport { disableMinutes, getMinutes } from '../../utils/timepicker-time.utils';\n\n\n@Component({\n    selector: 'ngx-material-timepicker-minutes-face',\n    templateUrl: './ngx-material-timepicker-minutes-face.component.html'\n})\nexport class NgxMaterialTimepickerMinutesFaceComponent implements OnChanges {\n\n    minutesList: ClockFaceTime[] = [];\n    timeUnit = TimeUnit;\n\n    @Input() selectedMinute: ClockFaceTime;\n    @Input() selectedHour: number;\n    @Input() period: TimePeriod;\n    @Input() minTime: DateTime;\n    @Input() maxTime: DateTime;\n    @Input() format: number;\n    @Input() minutesGap: number;\n\n    @Output() minuteChange = new EventEmitter<ClockFaceTime>();\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['period'] && changes['period'].currentValue) {\n            const minutes = getMinutes(this.minutesGap);\n            this.minutesList = disableMinutes(minutes, this.selectedHour, {\n                min: this.minTime,\n                max: this.maxTime,\n                format: this.format,\n                period: this.period\n            });\n        }\n    }\n}\n\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Output,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { TimeUnit } from '../../models/time-unit.enum';\n\nconst CLOCK_HAND_STYLES = {\n    small: {\n        height: '75px',\n        top: 'calc(50% - 75px)'\n    },\n    large: {\n        height: '103px',\n        top: 'calc(50% - 103px)'\n    }\n};\n\n@Component({\n    selector: 'ngx-material-timepicker-face',\n    templateUrl: './ngx-material-timepicker-face.component.html',\n    styleUrls: ['./ngx-material-timepicker-face.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxMaterialTimepickerFaceComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n    timeUnit = TimeUnit;\n\n    isClockFaceDisabled: boolean;\n    innerClockFaceSize = 85;\n\n    @Input() faceTime: ClockFaceTime[];\n    @Input() selectedTime: ClockFaceTime;\n    @Input() unit: TimeUnit;\n    @Input() format: number;\n    @Input() minutesGap: number;\n\n    @Output() timeChange = new EventEmitter<ClockFaceTime>();\n    @Output() timeSelected = new EventEmitter<number>();\n\n    @ViewChild('clockFace') clockFace: ElementRef;\n    @ViewChild('clockHand') clockHand: ElementRef;\n\n    private isStarted: boolean;\n    private touchStartHandler: () => any;\n    private touchEndHandler: () => any;\n\n    ngAfterViewInit() {\n        this.setClockHandPosition();\n        this.addTouchEvents();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const faceTimeChanges = changes['faceTime'];\n        const selectedTimeChanges = changes['selectedTime'];\n\n        if ((faceTimeChanges && faceTimeChanges.currentValue)\n            && (selectedTimeChanges && selectedTimeChanges.currentValue)) {\n            /* Set time according to passed an input value */\n            this.selectedTime = this.faceTime.find(time => time.time === this.selectedTime.time);\n        }\n        if (selectedTimeChanges && selectedTimeChanges.currentValue) {\n            this.setClockHandPosition();\n        }\n        if (faceTimeChanges && faceTimeChanges.currentValue) {\n            // To avoid an error ExpressionChangedAfterItHasBeenCheckedError\n            setTimeout(() => this.selectAvailableTime());\n        }\n    }\n\n\n    trackByTime(_, time: ClockFaceTime): string | number {\n        return time.time;\n    }\n\n    @HostListener('mousedown', ['$event'])\n    onMousedown(e: MouseEvent | TouchEvent) {\n        e.preventDefault();\n        this.isStarted = true;\n    }\n\n    @HostListener('click', ['$event'])\n    @HostListener('touchmove', ['$event.changedTouches[0]'])\n    @HostListener('touchend', ['$event.changedTouches[0]'])\n    @HostListener('mousemove', ['$event'])\n    selectTime(e: MouseEvent | Touch): void {\n\n        if (!this.isStarted && (e instanceof MouseEvent && e.type !== 'click')) {\n            return;\n        }\n        const clockFaceCords = this.clockFace.nativeElement.getBoundingClientRect();\n\n        /* Get x0 and y0 of the circle */\n        const centerX = clockFaceCords.left + clockFaceCords.width / 2;\n        const centerY = clockFaceCords.top + clockFaceCords.height / 2;\n        /* Counting the arctangent and convert it to from radian to deg */\n        const arctangent = Math.atan(Math.abs(e.clientX - centerX) / Math.abs(e.clientY - centerY)) * 180 / Math.PI;\n        /* Get angle according to quadrant */\n        const circleAngle = countAngleByCords(centerX, centerY, e.clientX, e.clientY, arctangent);\n        /* Check if selected time from the inner clock face (24 hours format only) */\n        const isInnerClockChosen = this.format && this.isInnerClockFace(centerX, centerY, e.clientX, e.clientY);\n        /* Round angle according to angle step */\n        const angleStep = this.unit === TimeUnit.MINUTE ? (6 * (this.minutesGap || 1)) : 30;\n        const roundedAngle = isInnerClockChosen\n            ? roundAngle(circleAngle, angleStep) + 360\n            : roundAngle(circleAngle, angleStep);\n        const angle = roundedAngle === 0 ? 360 : roundedAngle;\n\n        const selectedTime = this.faceTime.find(val => val.angle === angle);\n\n        if (selectedTime && !selectedTime.disabled) {\n            this.timeChange.next(selectedTime);\n\n            /* To let know whether user ended interaction with clock face */\n            if (!this.isStarted) {\n                this.timeSelected.next(selectedTime.time);\n            }\n        }\n\n    }\n\n    @HostListener('mouseup', ['$event'])\n    onMouseup(e: MouseEvent | TouchEvent) {\n        e.preventDefault();\n        this.isStarted = false;\n    }\n\n    isHourSelected(hour: number): boolean {\n        return (hour === this.selectedTime.time) && !this.isClockFaceDisabled;\n    }\n\n    isMinuteSelected(minute: number): boolean {\n        return ((this.selectedTime.time === minute) && (minute % (this.minutesGap || 5) === 0)) && !this.isClockFaceDisabled;\n    }\n\n    ngOnDestroy() {\n        this.removeTouchEvents();\n    }\n\n    private addTouchEvents(): void {\n        this.touchStartHandler = this.onMousedown.bind(this);\n        this.touchEndHandler = this.onMouseup.bind(this);\n\n        this.clockFace.nativeElement.addEventListener('touchstart', this.touchStartHandler);\n        this.clockFace.nativeElement.addEventListener('touchend', this.touchEndHandler);\n    }\n\n    private removeTouchEvents(): void {\n        this.clockFace.nativeElement.removeEventListener('touchstart', this.touchStartHandler);\n        this.clockFace.nativeElement.removeEventListener('touchend', this.touchEndHandler);\n    }\n\n    private setClockHandPosition(): void {\n        if (this.format === 24) {\n            if (this.selectedTime.time > 12 || this.selectedTime.time === 0) {\n                this.decreaseClockHand();\n            } else {\n                this.increaseClockHand();\n            }\n        }\n\n        this.clockHand.nativeElement.style.transform = `rotate(${this.selectedTime.angle}deg)`;\n    }\n\n    private selectAvailableTime(): void {\n        const currentTime = this.faceTime.find(time => this.selectedTime.time === time.time);\n        this.isClockFaceDisabled = this.faceTime.every(time => time.disabled);\n\n        if ((currentTime && currentTime.disabled) && !this.isClockFaceDisabled) {\n            const availableTime = this.faceTime.find(time => !time.disabled);\n\n            this.timeChange.next(availableTime);\n        }\n    }\n\n    private isInnerClockFace(x0: number, y0: number, x: number, y: number): boolean {\n        /* Detect whether time from the inner clock face or not (24 format only) */\n        return Math.sqrt(Math.pow(x - x0, 2) + Math.pow(y - y0, 2)) < this.innerClockFaceSize;\n    }\n\n    private decreaseClockHand(): void {\n        this.clockHand.nativeElement.style.height = CLOCK_HAND_STYLES.small.height;\n        this.clockHand.nativeElement.style.top = CLOCK_HAND_STYLES.small.top;\n    }\n\n    private increaseClockHand(): void {\n        this.clockHand.nativeElement.style.height = CLOCK_HAND_STYLES.large.height;\n        this.clockHand.nativeElement.style.top = CLOCK_HAND_STYLES.large.top;\n    }\n}\n\nfunction roundAngle(angle: number, step: number): number {\n    return Math.round(angle / step) * step;\n}\n\nfunction countAngleByCords(x0: number, y0: number, x: number, y: number, currentAngle: number): number {\n    if (y > y0 && x >= x0) {// II quarter\n        return 180 - currentAngle;\n    } else if (y > y0 && x < x0) {// III quarter\n        return 180 + currentAngle;\n    } else if (y < y0 && x < x0) {// IV quarter\n        return 360 - currentAngle;\n    } else {// I quarter\n        return currentAngle;\n    }\n}\n","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'ngx-material-timepicker-button',\n    templateUrl: './ngx-material-timepicker-button.component.html',\n    styleUrls: ['./ngx-material-timepicker-button.component.scss']\n})\nexport class NgxMaterialTimepickerButtonComponent {\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, TemplateRef } from '@angular/core';\nimport { TimePeriod } from '../../models/time-period.enum';\nimport { TimeUnit } from '../../models/time-unit.enum';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { DateTime } from 'luxon';\nimport { disableHours, disableMinutes, getHours, getMinutes } from '../../utils/timepicker-time.utils';\n\n@Component({\n    selector: 'ngx-material-timepicker-dial',\n    templateUrl: 'ngx-material-timepicker-dial.component.html',\n    styleUrls: ['ngx-material-timepicker-dial.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxMaterialTimepickerDialComponent implements OnChanges {\n\n    timeUnit = TimeUnit;\n\n    hours: ClockFaceTime[];\n    minutes: ClockFaceTime[];\n\n    isHintVisible: boolean;\n\n    @Input() editableHintTmpl: TemplateRef<Node>;\n    @Input() hour: number | string;\n    @Input() minute: number | string;\n    @Input() format: number;\n    @Input() period: TimePeriod;\n    @Input() activeTimeUnit: TimeUnit;\n    @Input() minTime: DateTime;\n    @Input() maxTime: DateTime;\n    @Input() isEditable: boolean;\n    @Input() minutesGap: number;\n\n    @Output() periodChanged = new EventEmitter<TimePeriod>();\n    @Output() timeUnitChanged = new EventEmitter<TimeUnit>();\n    @Output() hourChanged = new EventEmitter<ClockFaceTime>();\n    @Output() minuteChanged = new EventEmitter<ClockFaceTime>();\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['period'] && changes['period'].currentValue\n            || changes['format'] && changes['format'].currentValue) {\n            const hours = getHours(this.format);\n\n            this.hours = disableHours(hours, {\n                min: this.minTime,\n                max: this.maxTime,\n                format: this.format,\n                period: this.period\n            });\n        }\n        if (changes['period'] && changes['period'].currentValue\n            || changes['hour'] && changes['hour'].currentValue) {\n            const minutes = getMinutes(this.minutesGap);\n\n            this.minutes = disableMinutes(minutes, +this.hour, {\n                min: this.minTime,\n                max: this.maxTime,\n                format: this.format,\n                period: this.period\n            });\n        }\n    }\n\n    changeTimeUnit(unit: TimeUnit): void {\n        this.timeUnitChanged.next(unit);\n    }\n\n    changePeriod(period: TimePeriod): void {\n        this.periodChanged.next(period);\n    }\n\n    changeHour(hour: ClockFaceTime): void {\n        this.hourChanged.next(hour);\n    }\n\n    changeMinute(minute: ClockFaceTime): void {\n        this.minuteChanged.next(minute);\n    }\n\n    showHint(): void {\n        this.isHintVisible = true;\n    }\n\n    hideHint(): void {\n        this.isHintVisible = false;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TimeUnit } from '../models/time-unit.enum';\nimport { DateTime } from 'luxon';\n\n@Pipe({\n    name: 'timeFormatter'\n})\nexport class TimeFormatterPipe implements PipeTransform {\n\n    transform(time: number, timeUnit: TimeUnit): any {\n        if (time === undefined) {\n            return time;\n        }\n        switch (timeUnit) {\n            case TimeUnit.HOUR:\n                return DateTime.fromObject({hour: time}).toFormat('HH');\n            case TimeUnit.MINUTE:\n                return DateTime.fromObject({minute: time}).toFormat('mm');\n            default:\n                throw new Error('no such time unit');\n        }\n    }\n\n}\n","/* tslint:disable:triple-equals */\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { TimeUnit } from '../../models/time-unit.enum';\nimport { TimeFormatterPipe } from '../../pipes/time-formatter.pipe';\n\n@Component({\n    selector: 'ngx-material-timepicker-dial-control',\n    templateUrl: 'ngx-material-timepicker-dial-control.component.html',\n    styleUrls: ['ngx-material-timepicker-dial-control.component.scss']\n})\nexport class NgxMaterialTimepickerDialControlComponent implements OnChanges {\n\n    previousTime: number | string;\n\n    @Input() timeList: ClockFaceTime[];\n    @Input() timeUnit: TimeUnit;\n    @Input() time: string;\n    @Input() isActive: boolean;\n    @Input() isEditable: boolean;\n    @Input() minutesGap: number;\n\n    @Output() timeUnitChanged = new EventEmitter<TimeUnit>();\n    @Output() timeChanged = new EventEmitter<ClockFaceTime>();\n    @Output() focused = new EventEmitter<null>();\n    @Output() unfocused = new EventEmitter<null>();\n\n    private get selectedTime(): ClockFaceTime {\n        if (!!this.time) {\n            return this.timeList.find(t => t.time === +this.time);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['time'] && (changes['time'].currentValue !== undefined)) {\n            if (this.isEditable && !changes['time'].firstChange) {\n                return;\n            }\n            this.time = new TimeFormatterPipe().transform(+changes['time'].currentValue, this.timeUnit);\n        }\n    }\n\n    saveTimeAndChangeTimeUnit(event: FocusEvent, unit: TimeUnit): void {\n        event.preventDefault();\n        this.previousTime = this.time;\n        this.timeUnitChanged.next(unit);\n        this.focused.next();\n    }\n\n    updateTime(): void {\n        const time = this.selectedTime;\n        if (time) {\n            this.timeChanged.next(time);\n            this.previousTime = time.time;\n        }\n    }\n\n    formatTime(): void {\n        if (this.isEditable) {\n            const time = this.time || this.previousTime;\n            this.time = new TimeFormatterPipe().transform(+time, this.timeUnit);\n            this.unfocused.next();\n        }\n    }\n\n    onKeyDown(e: KeyboardEvent): void {\n        const char = String.fromCharCode(e.keyCode);\n\n\n        if ((!isInputAllowed(e)) || isTimeDisabledToChange(this.time, char, this.timeList)) {\n            e.preventDefault();\n        }\n\n        if (isInputAllowed(e)) {\n            this.changeTimeByArrow(e.keyCode);\n        }\n    }\n\n    private changeTimeByArrow(keyCode: number): void {\n        const ARROW_UP = 38;\n        const ARROW_DOWN = 40;\n        let time: string;\n\n        if (keyCode === ARROW_UP) {\n            time = String(+this.time + (this.minutesGap || 1));\n        } else if (keyCode === ARROW_DOWN) {\n            time = String(+this.time - (this.minutesGap || 1));\n        }\n\n        if (!isTimeUnavailable(time, this.timeList)) {\n            this.time = time;\n            this.updateTime();\n        }\n    }\n\n}\n\nfunction isInputAllowed(e: KeyboardEvent): boolean {\n    // Allow: backspace, delete, tab, escape, enter\n    if ([46, 8, 9, 27, 13].some(n => n === e.keyCode) ||\n        // Allow: Ctrl/cmd+A\n        (e.keyCode == 65 && (e.ctrlKey === true || e.metaKey === true)) ||\n        // Allow: Ctrl/cmd+C\n        (e.keyCode == 67 && (e.ctrlKey === true || e.metaKey === true)) ||\n        // Allow: Ctrl/cmd+X\n        (e.keyCode == 88 && (e.ctrlKey === true || e.metaKey === true)) ||\n        // Allow: home, end, left, right, up, down\n        (e.keyCode >= 35 && e.keyCode <= 40)) {\n\n        return true;\n    }\n    return !((e.keyCode < 48 || e.keyCode > 57) && (e.keyCode < 96 || e.keyCode > 105));\n}\n\nfunction isTimeDisabledToChange(currentTime: string, nextTime: string, timeList: ClockFaceTime[]): boolean {\n    const isNumber = /\\d/.test(nextTime);\n\n    if (isNumber) {\n        const time = currentTime + nextTime;\n        return isTimeUnavailable(time, timeList);\n    }\n}\n\nfunction isTimeUnavailable(time: string, timeList: ClockFaceTime[]): boolean {\n    const selectedTime = timeList.find(value => value.time === +time);\n    return !selectedTime || (selectedTime && selectedTime.disabled);\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { TimePeriod } from '../../models/time-period.enum';\nimport { TimeUnit } from '../../models/time-unit.enum';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { animate, sequence, style, transition, trigger } from '@angular/animations';\nimport { DateTime } from 'luxon';\nimport { disableHours, disableMinutes } from '../../utils/timepicker-time.utils';\n\n@Component({\n    selector: 'ngx-material-timepicker-period',\n    templateUrl: 'ngx-material-timepicker-period.component.html',\n    styleUrls: ['ngx-material-timepicker-period.component.scss'],\n    animations: [\n        trigger('scaleInOut', [\n            transition(':enter', [\n                style({transform: 'scale(0)'}),\n                animate('.2s', style({transform: 'scale(1)'})),\n                sequence([\n                    animate('3s', style({opacity: 1})),\n                    animate('.3s', style({opacity: 0}))\n                ])\n            ])\n        ])\n    ]\n})\nexport class NgxMaterialTimepickerPeriodComponent {\n\n    timePeriod = TimePeriod;\n    isPeriodAvailable = true;\n\n    @Input() selectedPeriod: TimePeriod;\n    @Input() format: number;\n    @Input() activeTimeUnit: TimeUnit;\n    @Input() hours: ClockFaceTime[];\n    @Input() minutes: ClockFaceTime[];\n    @Input() minTime: DateTime;\n    @Input() maxTime: DateTime;\n    @Input() selectedHour: number | string;\n\n    @Output() periodChanged = new EventEmitter<TimePeriod>();\n\n    changePeriod(period: TimePeriod): void {\n        this.isPeriodAvailable = this.isSwitchPeriodAvailable(period);\n        if (this.isPeriodAvailable) {\n            this.periodChanged.next(period);\n        }\n    }\n\n    animationDone(): void {\n        this.isPeriodAvailable = true;\n    }\n\n    private isSwitchPeriodAvailable(period: TimePeriod): boolean {\n        const time = this.getDisabledTimeByPeriod(period);\n        return !time.every(t => t.disabled);\n    }\n\n    private getDisabledTimeByPeriod(period: TimePeriod): ClockFaceTime[] {\n        switch (this.activeTimeUnit) {\n            case TimeUnit.HOUR:\n                return disableHours(this.hours, {\n                    min: this.minTime,\n                    max: this.maxTime,\n                    format: this.format,\n                    period\n                });\n            case TimeUnit.MINUTE:\n                return disableMinutes(this.minutes, +this.selectedHour, {\n                    min: this.minTime,\n                    max: this.maxTime,\n                    format: this.format,\n                    period\n                });\n            default:\n                throw new Error('no such TimeUnit');\n        }\n    }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Pipe({\n    name: 'styleSanitizer'\n})\nexport class StyleSanitizerPipe implements PipeTransform {\n\n    constructor(private domSanitizer: DomSanitizer) {\n    }\n\n    transform(value: string): any {\n        if (!value) {\n            return value;\n        }\n        return this.domSanitizer.bypassSecurityTrustStyle(value);\n    }\n\n}\n","import { Directive, HostListener, Input } from '@angular/core';\nimport {NgxMaterialTimepickerEventService} from '../services/ngx-material-timepicker-event.service';\n\n@Directive({\n    selector: '[overlay]'\n})\nexport class OverlayDirective {\n\n    @Input('overlay') preventClick: boolean;\n\n    constructor(private eventService: NgxMaterialTimepickerEventService) {\n    }\n\n\n    @HostListener('click', ['$event'])\n    onClick(e: MouseEvent) {\n        if (!this.preventClick) {\n            this.eventService.dispatchEvent(e);\n        }\n        e.preventDefault();\n    }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'minutesFormatter'\n})\nexport class MinutesFormatterPipe implements PipeTransform {\n\n    transform(minute: number, gap = 5): number | string {\n        if (!minute) {\n            return minute;\n        }\n\n        return minute % gap === 0 ? minute : '';\n    }\n\n}\n","import {Directive, ElementRef, Inject, Input, OnChanges, OnDestroy, Optional} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n@Directive({\n    selector: '[timepickerAutofocus]'\n})\nexport class AutofocusDirective implements OnChanges, OnDestroy {\n\n    @Input('timepickerAutofocus') isFocusActive: boolean;\n\n    private activeElement: HTMLElement;\n\n    constructor(private element: ElementRef, @Optional() @Inject(DOCUMENT) private document: any) {\n        this.activeElement = this.document.activeElement;\n    }\n\n    ngOnChanges() {\n        if (this.isFocusActive) {\n            // To avoid ExpressionChangedAfterItHasBeenCheckedError;\n            setTimeout(() => this.element.nativeElement.focus());\n        }\n    }\n\n    ngOnDestroy() {\n        // To avoid ExpressionChangedAfterItHasBeenCheckedError;\n        setTimeout(() => this.activeElement.focus());\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxMaterialTimepickerComponent } from './ngx-material-timepicker.component';\nimport { FormsModule } from '@angular/forms';\nimport { NgxMaterialTimepickerToggleComponent } from './components/timepicker-toggle-button/ngx-material-timepicker-toggle.component';\nimport { TimepickerDirective } from './directives/ngx-timepicker.directive';\nimport { NgxMaterialTimepickerToggleIconDirective } from './directives/ngx-material-timepicker-toggle-icon.directive';\nimport { NgxMaterialTimepickerThemeDirective } from './directives/ngx-material-timepicker-theme.directive';\nimport {\n    NgxMaterialTimepicker24HoursFaceComponent\n} from './components/timepicker-24-hours-face/ngx-material-timepicker-24-hours-face.component';\nimport {\n    NgxMaterialTimepicker12HoursFaceComponent\n} from './components/timepicker-12-hours-face/ngx-material-timepicker-12-hours-face.component';\nimport {\n    NgxMaterialTimepickerMinutesFaceComponent\n} from './components/timepicker-minutes-face/ngx-material-timepicker-minutes-face.component';\nimport { NgxMaterialTimepickerFaceComponent } from './components/timepicker-face/ngx-material-timepicker-face.component';\nimport { NgxMaterialTimepickerButtonComponent } from './components/timepicker-button/ngx-material-timepicker-button.component';\nimport { NgxMaterialTimepickerDialComponent } from './components/timepicker-dial/ngx-material-timepicker-dial.component';\nimport {\n    NgxMaterialTimepickerDialControlComponent\n} from './components/timepicker-dial-control/ngx-material-timepicker-dial-control.component';\nimport { NgxMaterialTimepickerPeriodComponent } from './components/timepicker-period/ngx-material-timepicker-period.component';\nimport { StyleSanitizerPipe } from './pipes/style-sanitizer.pipe';\nimport { TimeFormatterPipe } from './pipes/time-formatter.pipe';\nimport { OverlayDirective } from './directives/overlay.directive';\nimport { MinutesFormatterPipe } from './pipes/minutes-formatter.pipe';\nimport { AutofocusDirective } from './directives/autofocus.directive';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    exports: [\n        NgxMaterialTimepickerComponent,\n        NgxMaterialTimepickerToggleComponent,\n        TimepickerDirective,\n        NgxMaterialTimepickerToggleIconDirective,\n        NgxMaterialTimepickerThemeDirective\n    ],\n    declarations: [\n        NgxMaterialTimepickerComponent,\n        NgxMaterialTimepicker24HoursFaceComponent,\n        NgxMaterialTimepicker12HoursFaceComponent,\n        NgxMaterialTimepickerMinutesFaceComponent,\n        NgxMaterialTimepickerFaceComponent,\n        NgxMaterialTimepickerToggleComponent,\n        NgxMaterialTimepickerButtonComponent,\n        NgxMaterialTimepickerDialComponent,\n        NgxMaterialTimepickerDialControlComponent,\n        NgxMaterialTimepickerPeriodComponent,\n        StyleSanitizerPipe,\n        TimeFormatterPipe,\n        TimepickerDirective,\n        OverlayDirective,\n        NgxMaterialTimepickerToggleIconDirective,\n        AutofocusDirective,\n        MinutesFormatterPipe,\n        NgxMaterialTimepickerThemeDirective\n    ]\n})\nexport class NgxMaterialTimepickerModule {\n}\n"]}